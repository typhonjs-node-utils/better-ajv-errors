[
   {
      "codeFrame": "  1 | {\n> 2 |   \"duplicate\": false,\n    |                ^^^^^\n  3 |   \"enum-one\": false,\n  4 |   \"enum-three\": false,\n  5 |   \"enum-two\": false,",
      "instancePath": "/duplicate",
      "error": {
         "instancePath": "/duplicate",
         "keyword": "type",
         "params": {
            "type": "object"
         },
         "message": "must be object",
         "schemaPath": "#/definitions/object1/type"
      },
      "keyword": "type",
      "message": "/duplicate must be object"
   },
   {
      "codeFrame": "  1 | {\n  2 |   \"duplicate\": false,\n> 3 |   \"enum-one\": false,\n    |               ^^^^^\n  4 |   \"enum-three\": false,\n  5 |   \"enum-two\": false,\n  6 |   \"errorMessage\": false,",
      "instancePath": "/enum-one",
      "error": {
         "instancePath": "/enum-one",
         "keyword": "enum",
         "params": {
            "allowedValues": [
               "ONE"
            ]
         },
         "message": "must be equal to one of the allowed values",
         "schemaPath": "#/properties/enum-one/enum"
      },
      "keyword": "enum",
      "message": "/enum-one must be equal to one of the allowed values: 'ONE'"
   },
   {
      "codeFrame": "  3 |   \"enum-one\": false,\n  4 |   \"enum-three\": false,\n> 5 |   \"enum-two\": false,\n    |               ^^^^^\n  6 |   \"errorMessage\": false,\n  7 |   \"not-type-string\": \"well it's a string\",\n  8 |   \"type-array-additionalItems-false\": [",
      "instancePath": "/enum-two",
      "error": {
         "instancePath": "/enum-two",
         "keyword": "enum",
         "params": {
            "allowedValues": [
               "ONE",
               "TWO"
            ]
         },
         "message": "must be equal to one of the allowed values",
         "schemaPath": "#/properties/enum-two/enum"
      },
      "keyword": "enum",
      "message": "/enum-two must be equal to one of the allowed values: 'ONE' or 'TWO'"
   },
   {
      "codeFrame": "  2 |   \"duplicate\": false,\n  3 |   \"enum-one\": false,\n> 4 |   \"enum-three\": false,\n    |                 ^^^^^\n  5 |   \"enum-two\": false,\n  6 |   \"errorMessage\": false,\n  7 |   \"not-type-string\": \"well it's a string\",",
      "instancePath": "/enum-three",
      "error": {
         "instancePath": "/enum-three",
         "keyword": "enum",
         "params": {
            "allowedValues": [
               "ONE",
               "TWO",
               "THREE"
            ]
         },
         "message": "must be equal to one of the allowed values",
         "schemaPath": "#/properties/enum-three/enum"
      },
      "keyword": "enum",
      "message": "/enum-three must be equal to one of the allowed values: 'ONE', 'TWO', or 'THREE'"
   },
   {
      "codeFrame": "  4 |   \"enum-three\": false,\n  5 |   \"enum-two\": false,\n> 6 |   \"errorMessage\": false,\n    |                   ^^^^^\n  7 |   \"not-type-string\": \"well it's a string\",\n  8 |   \"type-array-additionalItems-false\": [\n  9 |     \"is fine\",",
      "instancePath": "/errorMessage",
      "error": {
         "instancePath": "/errorMessage",
         "keyword": "errorMessage",
         "params": {
            "errors": [
               {
                  "instancePath": "/errorMessage",
                  "schemaPath": "#/properties/errorMessage/type",
                  "keyword": "type",
                  "params": {
                     "type": "string"
                  },
                  "message": "must be string",
                  "emUsed": true
               }
            ]
         },
         "message": "should be a string",
         "schemaPath": "#/properties/errorMessage/errorMessage"
      },
      "keyword": "errorMessage",
      "message": "/errorMessage should be a string"
   },
   {
      "codeFrame": "   6 |   \"errorMessage\": false,\n   7 |   \"not-type-string\": \"well it's a string\",\n>  8 |   \"type-array-additionalItems-false\": [\n     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   9 |     \"is fine\",\n  10 |     true,\n  11 |     \"not fine\"",
      "instancePath": "/type-array-additionalItems-false",
      "error": {
         "instancePath": "/type-array-additionalItems-false",
         "keyword": "additionalItems",
         "params": {
            "limit": 2
         },
         "message": "must NOT have more than 2 items",
         "schemaPath": "#/properties/type-array-additionalItems-false/additionalItems"
      },
      "keyword": "additionalItems",
      "message": "/type-array-additionalItems-false must NOT have more than 2 items"
   },
   {
      "codeFrame": "  14 |     \"is fine\",\n  15 |     true,\n> 16 |     \"not fine\"\n     |     ^^^^^^^^^^\n  17 |   ],\n  18 |   \"type-array-contains\": [\n  19 |     \"not boolean\",",
      "instancePath": "/type-array-additionalItems-type-boolean/2",
      "error": {
         "instancePath": "/type-array-additionalItems-type-boolean/2",
         "keyword": "type",
         "params": {
            "type": "boolean"
         },
         "message": "must be boolean",
         "schemaPath": "#/properties/type-array-additionalItems-type-boolean/additionalItems/type"
      },
      "keyword": "type",
      "message": "/type-array-additionalItems-type-boolean/2 must be boolean"
   },
   {
      "codeFrame": "  17 |   ],\n  18 |   \"type-array-contains\": [\n> 19 |     \"not boolean\",\n     |     ^^^^^^^^^^^^^\n  20 |     \"not boolean\",\n  21 |     \"not boolean\",\n  22 |     \"not boolean\"",
      "instancePath": "/type-array-contains/0",
      "error": {
         "instancePath": "/type-array-contains/0",
         "keyword": "type",
         "params": {
            "type": "boolean"
         },
         "message": "must be boolean",
         "schemaPath": "#/properties/type-array-contains/contains/type"
      },
      "keyword": "type",
      "message": "/type-array-contains/0 must be boolean"
   },
   {
      "codeFrame": "  18 |   \"type-array-contains\": [\n  19 |     \"not boolean\",\n> 20 |     \"not boolean\",\n     |     ^^^^^^^^^^^^^\n  21 |     \"not boolean\",\n  22 |     \"not boolean\"\n  23 |   ],",
      "instancePath": "/type-array-contains/1",
      "error": {
         "instancePath": "/type-array-contains/1",
         "keyword": "type",
         "params": {
            "type": "boolean"
         },
         "message": "must be boolean",
         "schemaPath": "#/properties/type-array-contains/contains/type"
      },
      "keyword": "type",
      "message": "/type-array-contains/1 must be boolean"
   },
   {
      "codeFrame": "  19 |     \"not boolean\",\n  20 |     \"not boolean\",\n> 21 |     \"not boolean\",\n     |     ^^^^^^^^^^^^^\n  22 |     \"not boolean\"\n  23 |   ],\n  24 |   \"type-array-entry-object-required\": [{}],",
      "instancePath": "/type-array-contains/2",
      "error": {
         "instancePath": "/type-array-contains/2",
         "keyword": "type",
         "params": {
            "type": "boolean"
         },
         "message": "must be boolean",
         "schemaPath": "#/properties/type-array-contains/contains/type"
      },
      "keyword": "type",
      "message": "/type-array-contains/2 must be boolean"
   },
   {
      "codeFrame": "  20 |     \"not boolean\",\n  21 |     \"not boolean\",\n> 22 |     \"not boolean\"\n     |     ^^^^^^^^^^^^^\n  23 |   ],\n  24 |   \"type-array-entry-object-required\": [{}],\n  25 |   \"type-array-entry-object-required-long\": [{",
      "instancePath": "/type-array-contains/3",
      "error": {
         "instancePath": "/type-array-contains/3",
         "keyword": "type",
         "params": {
            "type": "boolean"
         },
         "message": "must be boolean",
         "schemaPath": "#/properties/type-array-contains/contains/type"
      },
      "keyword": "type",
      "message": "/type-array-contains/3 must be boolean"
   },
   {
      "codeFrame": "  16 |     \"not fine\"\n  17 |   ],\n> 18 |   \"type-array-contains\": [\n     |   ^^^^^^^^^^^^^^^^^^^^^\n  19 |     \"not boolean\",\n  20 |     \"not boolean\",\n  21 |     \"not boolean\",",
      "instancePath": "/type-array-contains",
      "error": {
         "instancePath": "/type-array-contains",
         "keyword": "contains",
         "params": {
            "minContains": 1
         },
         "message": "must contain at least 1 valid item(s)",
         "schemaPath": "#/properties/type-array-contains/contains"
      },
      "keyword": "contains",
      "message": "/type-array-contains must contain at least 1 valid item(s)"
   },
   {
      "codeFrame": "  22 |     \"not boolean\"\n  23 |   ],\n> 24 |   \"type-array-entry-object-required\": [{}],\n     |                                        ^^\n  25 |   \"type-array-entry-object-required-long\": [{\n  26 |     \"notkey\": false,\n  27 |     \"notkey1\": false,",
      "instancePath": "/type-array-entry-object-required/0",
      "error": {
         "instancePath": "/type-array-entry-object-required/0",
         "keyword": "required",
         "params": {
            "missingProperty": "key"
         },
         "message": "must have required property 'key'",
         "schemaPath": "#/properties/type-array-entry-object-required/items/required"
      },
      "keyword": "required",
      "message": "/type-array-entry-object-required/0 must have required property 'key'"
   },
   {
      "codeFrame": "  23 |   ],\n  24 |   \"type-array-entry-object-required\": [{}],\n> 25 |   \"type-array-entry-object-required-long\": [{\n> 26 |     \"notkey\": false,\n> 27 |     \"notkey1\": false,\n  28 |     \"notkey2\": false,\n  29 |     \"notkey3\": false\n  30 |   }],",
      "instancePath": "/type-array-entry-object-required-long/0",
      "error": {
         "instancePath": "/type-array-entry-object-required-long/0",
         "keyword": "required",
         "params": {
            "missingProperty": "key"
         },
         "message": "must have required property 'key'",
         "schemaPath": "#/properties/type-array-entry-object-required-long/items/required"
      },
      "keyword": "required",
      "message": "/type-array-entry-object-required-long/0 must have required property 'key'"
   },
   {
      "codeFrame": "  29 |     \"notkey3\": false\n  30 |   }],\n> 31 |   \"type-array-maxItems\": [\n     |   ^^^^^^^^^^^^^^^^^^^^^\n  32 |     \"onlyOneA\",\n  33 |     \"onlyOneB\"\n  34 |   ],",
      "instancePath": "/type-array-maxItems",
      "error": {
         "instancePath": "/type-array-maxItems",
         "keyword": "maxItems",
         "params": {
            "limit": 1
         },
         "message": "must NOT have more than 1 items",
         "schemaPath": "#/properties/type-array-maxItems/maxItems"
      },
      "keyword": "maxItems",
      "message": "/type-array-maxItems must NOT have more than 1 items"
   },
   {
      "codeFrame": "  33 |     \"onlyOneB\"\n  34 |   ],\n> 35 |   \"type-array-minItems\": [\n     |   ^^^^^^^^^^^^^^^^^^^^^\n  36 |     \"needTwo\"\n  37 |   ],\n  38 |   \"type-array-tuple-type\": [",
      "instancePath": "/type-array-minItems",
      "error": {
         "instancePath": "/type-array-minItems",
         "keyword": "minItems",
         "params": {
            "limit": 2
         },
         "message": "must NOT have fewer than 2 items",
         "schemaPath": "#/properties/type-array-minItems/minItems"
      },
      "keyword": "minItems",
      "message": "/type-array-minItems must NOT have fewer than 2 items"
   },
   {
      "codeFrame": "  37 |   ],\n  38 |   \"type-array-tuple-type\": [\n> 39 |     false,\n     |     ^^^^^\n  40 |     false\n  41 |   ],\n  42 |   \"type-array-uniqueItems\": [",
      "instancePath": "/type-array-tuple-type/0",
      "error": {
         "instancePath": "/type-array-tuple-type/0",
         "keyword": "type",
         "params": {
            "type": "string"
         },
         "message": "must be string",
         "schemaPath": "#/properties/type-array-tuple-type/items/0/type"
      },
      "keyword": "type",
      "message": "/type-array-tuple-type/0 must be string"
   },
   {
      "codeFrame": "  40 |     false\n  41 |   ],\n> 42 |   \"type-array-uniqueItems\": [\n     |   ^^^^^^^^^^^^^^^^^^^^^^^^\n  43 |     \"sameItem\",\n  44 |     \"sameItem\"\n  45 |   ],",
      "instancePath": "/type-array-uniqueItems",
      "error": {
         "instancePath": "/type-array-uniqueItems",
         "keyword": "uniqueItems",
         "params": {
            "i": 0,
            "j": 1
         },
         "message": "must NOT have duplicate items (items ## 1 and 0 are identical)",
         "schemaPath": "#/properties/type-array-uniqueItems/uniqueItems"
      },
      "keyword": "uniqueItems",
      "message": "/type-array-uniqueItems must NOT have duplicate items (items ## 1 and 0 are identical)"
   },
   {
      "codeFrame": "  44 |     \"sameItem\"\n  45 |   ],\n> 46 |   \"type-number-minimum\": 0,\n     |                          ^\n  47 |   \"type-number-multipleOf\": 5,\n  48 |   \"type-object-additionalProperties-false\": {\n  49 |     \"one\": \"valid\",",
      "instancePath": "/type-number-minimum",
      "error": {
         "instancePath": "/type-number-minimum",
         "keyword": "minimum",
         "params": {
            "comparison": ">=",
            "limit": 1
         },
         "message": "must be >= 1",
         "schemaPath": "#/properties/type-number-minimum/minimum"
      },
      "keyword": "minimum",
      "message": "/type-number-minimum must be >= 1"
   },
   {
      "codeFrame": "  45 |   ],\n  46 |   \"type-number-minimum\": 0,\n> 47 |   \"type-number-multipleOf\": 5,\n     |                             ^\n  48 |   \"type-object-additionalProperties-false\": {\n  49 |     \"one\": \"valid\",\n  50 |     \"two\": false,",
      "instancePath": "/type-number-multipleOf",
      "error": {
         "instancePath": "/type-number-multipleOf",
         "keyword": "multipleOf",
         "params": {
            "multipleOf": 10
         },
         "message": "must be multiple of 10",
         "schemaPath": "#/properties/type-number-multipleOf/multipleOf"
      },
      "keyword": "multipleOf",
      "message": "/type-number-multipleOf must be multiple of 10"
   },
   {
      "codeFrame": "  48 |   \"type-object-additionalProperties-false\": {\n  49 |     \"one\": \"valid\",\n> 50 |     \"two\": false,\n     |     ^^^^^\n  51 |     \"three\": false\n  52 |   },\n  53 |   \"type-object-additionalProperties-type-boolean\": {",
      "instancePath": "/type-object-additionalProperties-false",
      "error": {
         "instancePath": "/type-object-additionalProperties-false",
         "keyword": "additionalProperties",
         "params": {
            "additionalProperty": "two"
         },
         "message": "must NOT have additional properties",
         "schemaPath": "#/properties/type-object-additionalProperties-false/additionalProperties"
      },
      "keyword": "additionalProperties",
      "message": "/type-object-additionalProperties-false must NOT have additional properties: 'two'"
   },
   {
      "codeFrame": "  49 |     \"one\": \"valid\",\n  50 |     \"two\": false,\n> 51 |     \"three\": false\n     |     ^^^^^^^\n  52 |   },\n  53 |   \"type-object-additionalProperties-type-boolean\": {\n  54 |     \"one\": \"valid\",",
      "instancePath": "/type-object-additionalProperties-false",
      "error": {
         "instancePath": "/type-object-additionalProperties-false",
         "keyword": "additionalProperties",
         "params": {
            "additionalProperty": "three"
         },
         "message": "must NOT have additional properties",
         "schemaPath": "#/properties/type-object-additionalProperties-false/additionalProperties"
      },
      "keyword": "additionalProperties",
      "message": "/type-object-additionalProperties-false must NOT have additional properties: 'three'"
   },
   {
      "codeFrame": "  54 |     \"one\": \"valid\",\n  55 |     \"two\": false,\n> 56 |     \"three\": \"not boolean\"\n     |              ^^^^^^^^^^^^^\n  57 |   },\n  58 |   \"type-object-dependencies-properties\": {\n  59 |     \"one\": \"depends on two\"",
      "instancePath": "/type-object-additionalProperties-type-boolean/three",
      "error": {
         "instancePath": "/type-object-additionalProperties-type-boolean/three",
         "keyword": "type",
         "params": {
            "type": "boolean"
         },
         "message": "must be boolean",
         "schemaPath": "#/properties/type-object-additionalProperties-type-boolean/additionalProperties/type"
      },
      "keyword": "type",
      "message": "/type-object-additionalProperties-type-boolean/three must be boolean"
   },
   {
      "codeFrame": "  56 |     \"three\": \"not boolean\"\n  57 |   },\n> 58 |   \"type-object-dependencies-properties\": {\n     |                                          ^\n> 59 |     \"one\": \"depends on two\"\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> 60 |   },\n     | ^^^^\n  61 |   \"type-object-dependencies-schema\": {\n  62 |     \"one\": \"depends on two\",\n  63 |     \"two\": false",
      "instancePath": "/type-object-dependencies-properties",
      "error": {
         "instancePath": "/type-object-dependencies-properties",
         "keyword": "dependencies",
         "params": {
            "property": "one",
            "missingProperty": "two",
            "depsCount": 1,
            "deps": "two"
         },
         "message": "must have property two when property one is present",
         "schemaPath": "#/properties/type-object-dependencies-properties/dependencies"
      },
      "keyword": "dependencies",
      "message": "/type-object-dependencies-properties must have property two when property one is present"
   },
   {
      "codeFrame": "  61 |   \"type-object-dependencies-schema\": {\n  62 |     \"one\": \"depends on two\",\n> 63 |     \"two\": false\n     |            ^^^^^\n  64 |   },\n  65 |   \"type-object-maxProperties\": {\n  66 |     \"one\": false,",
      "instancePath": "/type-object-dependencies-schema/two",
      "error": {
         "instancePath": "/type-object-dependencies-schema/two",
         "keyword": "type",
         "params": {
            "type": "string"
         },
         "message": "must be string",
         "schemaPath": "#/properties/type-object-dependencies-schema/dependencies/one/properties/two/type"
      },
      "keyword": "type",
      "message": "/type-object-dependencies-schema/two must be string"
   },
   {
      "codeFrame": "  63 |     \"two\": false\n  64 |   },\n> 65 |   \"type-object-maxProperties\": {\n     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  66 |     \"one\": false,\n  67 |     \"too\": \"many\"\n  68 |   },",
      "instancePath": "/type-object-maxProperties",
      "error": {
         "instancePath": "/type-object-maxProperties",
         "keyword": "maxProperties",
         "params": {
            "limit": 1
         },
         "message": "must NOT have more than 1 properties",
         "schemaPath": "#/properties/type-object-maxProperties/maxProperties"
      },
      "keyword": "maxProperties",
      "message": "/type-object-maxProperties must NOT have more than 1 properties"
   },
   {
      "codeFrame": "  67 |     \"too\": \"many\"\n  68 |   },\n> 69 |   \"type-object-minProperties\": {\n     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  70 |     \"too\": \"few\"\n  71 |   },\n  72 |   \"type-object-patternProperties\": {",
      "instancePath": "/type-object-minProperties",
      "error": {
         "instancePath": "/type-object-minProperties",
         "keyword": "minProperties",
         "params": {
            "limit": 2
         },
         "message": "must NOT have fewer than 2 properties",
         "schemaPath": "#/properties/type-object-minProperties/minProperties"
      },
      "keyword": "minProperties",
      "message": "/type-object-minProperties must NOT have fewer than 2 properties"
   },
   {
      "codeFrame": "  73 |     \"S_1\": \"ok\",\n  74 |     \"I_1\": 1,\n> 75 |     \"S_2\": false\n     |            ^^^^^\n  76 |   },\n  77 |   \"type-object-propertyNames-pattern\": {\n  78 |     \"not pattern [A-Z]\": false",
      "instancePath": "/type-object-patternProperties/S_2",
      "error": {
         "instancePath": "/type-object-patternProperties/S_2",
         "keyword": "type",
         "params": {
            "type": "string"
         },
         "message": "must be string",
         "schemaPath": "#/properties/type-object-patternProperties/patternProperties/%5ES_/type"
      },
      "keyword": "type",
      "message": "/type-object-patternProperties/S_2 must be string"
   },
   {
      "codeFrame": "  75 |     \"S_2\": false\n  76 |   },\n> 77 |   \"type-object-propertyNames-pattern\": {\n     |                                        ^\n> 78 |     \"not pattern [A-Z]\": false\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> 79 |   },\n     | ^^^^\n  80 |   \"type-object-required\": {\n  81 |     \"two\": false\n  82 |   },",
      "instancePath": "/type-object-propertyNames-pattern",
      "error": {
         "instancePath": "/type-object-propertyNames-pattern",
         "keyword": "pattern",
         "params": {
            "pattern": "^[A-Z]$"
         },
         "message": "must match pattern \"^[A-Z]$\"",
         "propertyName": "not pattern [A-Z]",
         "schemaPath": "#/properties/type-object-propertyNames-pattern/propertyNames/pattern"
      },
      "keyword": "pattern",
      "message": "/type-object-propertyNames-pattern must match pattern \"^[A-Z]$\""
   },
   {
      "codeFrame": "  75 |     \"S_2\": false\n  76 |   },\n> 77 |   \"type-object-propertyNames-pattern\": {\n     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  78 |     \"not pattern [A-Z]\": false\n  79 |   },\n  80 |   \"type-object-required\": {",
      "instancePath": "/type-object-propertyNames-pattern",
      "error": {
         "instancePath": "/type-object-propertyNames-pattern",
         "keyword": "propertyNames",
         "params": {
            "propertyName": "not pattern [A-Z]"
         },
         "message": "property name must be valid",
         "schemaPath": "#/properties/type-object-propertyNames-pattern/propertyNames"
      },
      "keyword": "propertyNames",
      "message": "/type-object-propertyNames-pattern property name must be valid"
   },
   {
      "codeFrame": "  78 |     \"not pattern [A-Z]\": false\n  79 |   },\n> 80 |   \"type-object-required\": {\n     |   ^^^^^^^^^^^^^^^^^^^^^^\n  81 |     \"two\": false\n  82 |   },\n  83 |   \"type-string\": false,",
      "instancePath": "/type-object-required",
      "error": {
         "instancePath": "/type-object-required",
         "keyword": "required",
         "params": {
            "missingProperty": "one"
         },
         "message": "must have required property 'one'",
         "schemaPath": "#/properties/type-object-required/required"
      },
      "keyword": "required",
      "message": "/type-object-required must have required property 'one'"
   },
   {
      "codeFrame": "  81 |     \"two\": false\n  82 |   },\n> 83 |   \"type-string\": false,\n     |                  ^^^^^\n  84 |   \"type-string-const\": \"not const\",\n  85 |   \"type-string-format-date\": \"not date\",\n  86 |   \"type-string-format-date-time\": \"not date time\",",
      "instancePath": "/type-string",
      "error": {
         "instancePath": "/type-string",
         "keyword": "type",
         "params": {
            "type": "string"
         },
         "message": "must be string",
         "schemaPath": "#/properties/type-string/type"
      },
      "keyword": "type",
      "message": "/type-string must be string"
   },
   {
      "codeFrame": "   5 |   \"enum-two\": false,\n   6 |   \"errorMessage\": false,\n>  7 |   \"not-type-string\": \"well it's a string\",\n     |                      ^^^^^^^^^^^^^^^^^^^^\n   8 |   \"type-array-additionalItems-false\": [\n   9 |     \"is fine\",\n  10 |     true,",
      "instancePath": "/not-type-string",
      "error": {
         "instancePath": "/not-type-string",
         "keyword": "not",
         "params": {},
         "message": "must NOT be valid",
         "schemaPath": "#/properties/not-type-string/not"
      },
      "keyword": "not",
      "message": "/not-type-string must NOT be valid"
   },
   {
      "codeFrame": "  82 |   },\n  83 |   \"type-string\": false,\n> 84 |   \"type-string-const\": \"not const\",\n     |                        ^^^^^^^^^^^\n  85 |   \"type-string-format-date\": \"not date\",\n  86 |   \"type-string-format-date-time\": \"not date time\",\n  87 |   \"type-string-format-time\": \"not time\",",
      "instancePath": "/type-string-const",
      "error": {
         "instancePath": "/type-string-const",
         "keyword": "const",
         "params": {
            "allowedValue": "const"
         },
         "message": "must be equal to constant",
         "schemaPath": "#/properties/type-string-const/const"
      },
      "keyword": "const",
      "message": "/type-string-const must be equal to constant: 'const'"
   },
   {
      "codeFrame": "  83 |   \"type-string\": false,\n  84 |   \"type-string-const\": \"not const\",\n> 85 |   \"type-string-format-date\": \"not date\",\n     |                              ^^^^^^^^^^\n  86 |   \"type-string-format-date-time\": \"not date time\",\n  87 |   \"type-string-format-time\": \"not time\",\n  88 |   \"type-string-formatMinimum-date\": \"2020-01-01\",",
      "instancePath": "/type-string-format-date",
      "error": {
         "instancePath": "/type-string-format-date",
         "keyword": "format",
         "params": {
            "format": "date"
         },
         "message": "must match format \"date\"",
         "schemaPath": "#/properties/type-string-format-date/format"
      },
      "keyword": "format",
      "message": "/type-string-format-date must match format \"date\""
   },
   {
      "codeFrame": "  84 |   \"type-string-const\": \"not const\",\n  85 |   \"type-string-format-date\": \"not date\",\n> 86 |   \"type-string-format-date-time\": \"not date time\",\n     |                                   ^^^^^^^^^^^^^^^\n  87 |   \"type-string-format-time\": \"not time\",\n  88 |   \"type-string-formatMinimum-date\": \"2020-01-01\",\n  89 |   \"type-string-maxLength\": \"max3\",",
      "instancePath": "/type-string-format-date-time",
      "error": {
         "instancePath": "/type-string-format-date-time",
         "keyword": "format",
         "params": {
            "format": "date-time"
         },
         "message": "must match format \"date-time\"",
         "schemaPath": "#/properties/type-string-format-date-time/format"
      },
      "keyword": "format",
      "message": "/type-string-format-date-time must match format \"date-time\""
   },
   {
      "codeFrame": "  85 |   \"type-string-format-date\": \"not date\",\n  86 |   \"type-string-format-date-time\": \"not date time\",\n> 87 |   \"type-string-format-time\": \"not time\",\n     |                              ^^^^^^^^^^\n  88 |   \"type-string-formatMinimum-date\": \"2020-01-01\",\n  89 |   \"type-string-maxLength\": \"max3\",\n  90 |   \"type-string-minLength\": \"need6\",",
      "instancePath": "/type-string-format-time",
      "error": {
         "instancePath": "/type-string-format-time",
         "keyword": "format",
         "params": {
            "format": "time"
         },
         "message": "must match format \"time\"",
         "schemaPath": "#/properties/type-string-format-time/format"
      },
      "keyword": "format",
      "message": "/type-string-format-time must match format \"time\""
   },
   {
      "codeFrame": "  86 |   \"type-string-format-date-time\": \"not date time\",\n  87 |   \"type-string-format-time\": \"not time\",\n> 88 |   \"type-string-formatMinimum-date\": \"2020-01-01\",\n     |                                     ^^^^^^^^^^^^\n  89 |   \"type-string-maxLength\": \"max3\",\n  90 |   \"type-string-minLength\": \"need6\",\n  91 |   \"type-string-null\": false,",
      "instancePath": "/type-string-formatMinimum-date",
      "error": {
         "instancePath": "/type-string-formatMinimum-date",
         "keyword": "formatMinimum",
         "params": {
            "comparison": ">=",
            "limit": "2021-01-01"
         },
         "message": "should be >= 2021-01-01",
         "schemaPath": "#/properties/type-string-formatMinimum-date/formatMinimum"
      },
      "keyword": "formatMinimum",
      "message": "/type-string-formatMinimum-date should be >= 2021-01-01"
   },
   {
      "codeFrame": "  87 |   \"type-string-format-time\": \"not time\",\n  88 |   \"type-string-formatMinimum-date\": \"2020-01-01\",\n> 89 |   \"type-string-maxLength\": \"max3\",\n     |                            ^^^^^^\n  90 |   \"type-string-minLength\": \"need6\",\n  91 |   \"type-string-null\": false,\n  92 |   \"type-string-null-boolean\": 1,",
      "instancePath": "/type-string-maxLength",
      "error": {
         "instancePath": "/type-string-maxLength",
         "keyword": "maxLength",
         "params": {
            "limit": 3
         },
         "message": "must NOT have more than 3 characters",
         "schemaPath": "#/properties/type-string-maxLength/maxLength"
      },
      "keyword": "maxLength",
      "message": "/type-string-maxLength must NOT have more than 3 characters"
   },
   {
      "codeFrame": "  88 |   \"type-string-formatMinimum-date\": \"2020-01-01\",\n  89 |   \"type-string-maxLength\": \"max3\",\n> 90 |   \"type-string-minLength\": \"need6\",\n     |                            ^^^^^^^\n  91 |   \"type-string-null\": false,\n  92 |   \"type-string-null-boolean\": 1,\n  93 |   \"type-string-pattern\": \"not phone number\"",
      "instancePath": "/type-string-minLength",
      "error": {
         "instancePath": "/type-string-minLength",
         "keyword": "minLength",
         "params": {
            "limit": 6
         },
         "message": "must NOT have fewer than 6 characters",
         "schemaPath": "#/properties/type-string-minLength/minLength"
      },
      "keyword": "minLength",
      "message": "/type-string-minLength must NOT have fewer than 6 characters"
   },
   {
      "codeFrame": "  89 |   \"type-string-maxLength\": \"max3\",\n  90 |   \"type-string-minLength\": \"need6\",\n> 91 |   \"type-string-null\": false,\n     |                       ^^^^^\n  92 |   \"type-string-null-boolean\": 1,\n  93 |   \"type-string-pattern\": \"not phone number\"\n  94 | }",
      "instancePath": "/type-string-null",
      "error": {
         "instancePath": "/type-string-null",
         "keyword": "type",
         "params": {
            "type": [
               "string",
               "null"
            ]
         },
         "message": "must be string,null",
         "schemaPath": "#/properties/type-string-null/type"
      },
      "keyword": "type",
      "message": "/type-string-null should be string or null"
   },
   {
      "codeFrame": "  90 |   \"type-string-minLength\": \"need6\",\n  91 |   \"type-string-null\": false,\n> 92 |   \"type-string-null-boolean\": 1,\n     |                               ^\n  93 |   \"type-string-pattern\": \"not phone number\"\n  94 | }\n  95 |",
      "instancePath": "/type-string-null-boolean",
      "error": {
         "instancePath": "/type-string-null-boolean",
         "keyword": "type",
         "params": {
            "type": [
               "string",
               "null",
               "boolean"
            ]
         },
         "message": "must be string,null,boolean",
         "schemaPath": "#/properties/type-string-null-boolean/type"
      },
      "keyword": "type",
      "message": "/type-string-null-boolean should be string, null, or boolean"
   },
   {
      "codeFrame": "  91 |   \"type-string-null\": false,\n  92 |   \"type-string-null-boolean\": 1,\n> 93 |   \"type-string-pattern\": \"not phone number\"\n     |                          ^^^^^^^^^^^^^^^^^^\n  94 | }\n  95 |",
      "instancePath": "/type-string-pattern",
      "error": {
         "instancePath": "/type-string-pattern",
         "keyword": "pattern",
         "params": {
            "pattern": "^(\\([0-9]{3}\\))?[0-9]{3}-[0-9]{4}$"
         },
         "message": "must match pattern \"^(\\([0-9]{3}\\))?[0-9]{3}-[0-9]{4}$\"",
         "schemaPath": "#/properties/type-string-pattern/pattern"
      },
      "keyword": "pattern",
      "message": "/type-string-pattern must match pattern \"^(\\([0-9]{3}\\))?[0-9]{3}-[0-9]{4}$\""
   }
]