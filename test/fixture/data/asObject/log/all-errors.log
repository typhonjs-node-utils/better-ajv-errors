/duplicate should be object
  1 | {
> 2 |   "duplicate": false,
    |                ^^^^^
  3 |   "enum-one": false,
  4 |   "enum-three": false,
  5 |   "enum-two": false,

/enum-one should be equal to one of the allowed values: 'ONE'
  1 | {
  2 |   "duplicate": false,
> 3 |   "enum-one": false,
    |               ^^^^^
  4 |   "enum-three": false,
  5 |   "enum-two": false,
  6 |   "errorMessage": false,

/enum-two should be equal to one of the allowed values: 'ONE' or 'TWO'
  3 |   "enum-one": false,
  4 |   "enum-three": false,
> 5 |   "enum-two": false,
    |               ^^^^^
  6 |   "errorMessage": false,
  7 |   "not-type-string": "well it's a string",
  8 |   "type-array-additionalItems-false": [

/enum-three should be equal to one of the allowed values: 'ONE', 'TWO', or 'THREE'
  2 |   "duplicate": false,
  3 |   "enum-one": false,
> 4 |   "enum-three": false,
    |                 ^^^^^
  5 |   "enum-two": false,
  6 |   "errorMessage": false,
  7 |   "not-type-string": "well it's a string",

/errorMessage should be a string
  4 |   "enum-three": false,
  5 |   "enum-two": false,
> 6 |   "errorMessage": false,
    |                   ^^^^^
  7 |   "not-type-string": "well it's a string",
  8 |   "type-array-additionalItems-false": [
  9 |     "is fine",

/type-array-additionalItems-false should NOT have more than 2 items
   6 |   "errorMessage": false,
   7 |   "not-type-string": "well it's a string",
>  8 |   "type-array-additionalItems-false": [
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   9 |     "is fine",
  10 |     true,
  11 |     "not fine"

/type-array-additionalItems-type-boolean/2 should be boolean
  14 |     "is fine",
  15 |     true,
> 16 |     "not fine"
     |     ^^^^^^^^^^
  17 |   ],
  18 |   "type-array-contains": [
  19 |     "not boolean",

/type-array-contains/0 should be boolean
  17 |   ],
  18 |   "type-array-contains": [
> 19 |     "not boolean",
     |     ^^^^^^^^^^^^^
  20 |     "not boolean",
  21 |     "not boolean",
  22 |     "not boolean"

/type-array-contains/1 should be boolean
  18 |   "type-array-contains": [
  19 |     "not boolean",
> 20 |     "not boolean",
     |     ^^^^^^^^^^^^^
  21 |     "not boolean",
  22 |     "not boolean"
  23 |   ],

/type-array-contains/2 should be boolean
  19 |     "not boolean",
  20 |     "not boolean",
> 21 |     "not boolean",
     |     ^^^^^^^^^^^^^
  22 |     "not boolean"
  23 |   ],
  24 |   "type-array-entry-object-required": [{}],

/type-array-contains/3 should be boolean
  20 |     "not boolean",
  21 |     "not boolean",
> 22 |     "not boolean"
     |     ^^^^^^^^^^^^^
  23 |   ],
  24 |   "type-array-entry-object-required": [{}],
  25 |   "type-array-entry-object-required-long": [{

/type-array-contains should contain at least 1 valid item(s)
  16 |     "not fine"
  17 |   ],
> 18 |   "type-array-contains": [
     |   ^^^^^^^^^^^^^^^^^^^^^
  19 |     "not boolean",
  20 |     "not boolean",
  21 |     "not boolean",

/type-array-entry-object-required/0 should have required property 'key'
  22 |     "not boolean"
  23 |   ],
> 24 |   "type-array-entry-object-required": [{}],
     |                                        ^^
  25 |   "type-array-entry-object-required-long": [{
  26 |     "notkey": false,
  27 |     "notkey1": false,

/type-array-entry-object-required-long/0 should have required property 'key'
  23 |   ],
  24 |   "type-array-entry-object-required": [{}],
> 25 |   "type-array-entry-object-required-long": [{
> 26 |     "notkey": false,
> 27 |     "notkey1": false,
  28 |     "notkey2": false,
  29 |     "notkey3": false
  30 |   }],

/type-array-maxItems should NOT have more than 1 items
  29 |     "notkey3": false
  30 |   }],
> 31 |   "type-array-maxItems": [
     |   ^^^^^^^^^^^^^^^^^^^^^
  32 |     "onlyOneA",
  33 |     "onlyOneB"
  34 |   ],

/type-array-minItems should NOT have fewer than 2 items
  33 |     "onlyOneB"
  34 |   ],
> 35 |   "type-array-minItems": [
     |   ^^^^^^^^^^^^^^^^^^^^^
  36 |     "needTwo"
  37 |   ],
  38 |   "type-array-tuple-type": [

/type-array-tuple-type/0 should be string
  37 |   ],
  38 |   "type-array-tuple-type": [
> 39 |     false,
     |     ^^^^^
  40 |     false
  41 |   ],
  42 |   "type-array-uniqueItems": [

/type-array-uniqueItems should NOT have duplicate items (items ## 1 and 0 are identical)
  40 |     false
  41 |   ],
> 42 |   "type-array-uniqueItems": [
     |   ^^^^^^^^^^^^^^^^^^^^^^^^
  43 |     "sameItem",
  44 |     "sameItem"
  45 |   ],

/type-number-minimum should be >= 1
  44 |     "sameItem"
  45 |   ],
> 46 |   "type-number-minimum": 0,
     |                          ^
  47 |   "type-number-multipleOf": 5,
  48 |   "type-object-additionalProperties-false": {
  49 |     "one": "valid",

/type-number-multipleOf should be multiple of 10
  45 |   ],
  46 |   "type-number-minimum": 0,
> 47 |   "type-number-multipleOf": 5,
     |                             ^
  48 |   "type-object-additionalProperties-false": {
  49 |     "one": "valid",
  50 |     "two": false,

/type-object-additionalProperties-false should NOT have additional properties: 'two'
  48 |   "type-object-additionalProperties-false": {
  49 |     "one": "valid",
> 50 |     "two": false,
     |     ^^^^^
  51 |     "three": false
  52 |   },
  53 |   "type-object-additionalProperties-type-boolean": {

/type-object-additionalProperties-false should NOT have additional properties: 'three'
  49 |     "one": "valid",
  50 |     "two": false,
> 51 |     "three": false
     |     ^^^^^^^
  52 |   },
  53 |   "type-object-additionalProperties-type-boolean": {
  54 |     "one": "valid",

/type-object-additionalProperties-type-boolean/three should be boolean
  54 |     "one": "valid",
  55 |     "two": false,
> 56 |     "three": "not boolean"
     |              ^^^^^^^^^^^^^
  57 |   },
  58 |   "type-object-dependencies-properties": {
  59 |     "one": "depends on two"

/type-object-dependencies-properties should have property two when property one is present
  56 |     "three": "not boolean"
  57 |   },
> 58 |   "type-object-dependencies-properties": {
     |                                          ^
> 59 |     "one": "depends on two"
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 60 |   },
     | ^^^^
  61 |   "type-object-dependencies-schema": {
  62 |     "one": "depends on two",
  63 |     "two": false

/type-object-dependencies-schema/two should be string
  61 |   "type-object-dependencies-schema": {
  62 |     "one": "depends on two",
> 63 |     "two": false
     |            ^^^^^
  64 |   },
  65 |   "type-object-maxProperties": {
  66 |     "one": false,

/type-object-maxProperties should NOT have more than 1 items
  63 |     "two": false
  64 |   },
> 65 |   "type-object-maxProperties": {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  66 |     "one": false,
  67 |     "too": "many"
  68 |   },

/type-object-minProperties should NOT have fewer than 2 items
  67 |     "too": "many"
  68 |   },
> 69 |   "type-object-minProperties": {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  70 |     "too": "few"
  71 |   },
  72 |   "type-object-patternProperties": {

/type-object-patternProperties/S_2 should be string
  73 |     "S_1": "ok",
  74 |     "I_1": 1,
> 75 |     "S_2": false
     |            ^^^^^
  76 |   },
  77 |   "type-object-propertyNames-pattern": {
  78 |     "not pattern [A-Z]": false

/type-object-propertyNames-pattern should match pattern "^[A-Z]$"
  75 |     "S_2": false
  76 |   },
> 77 |   "type-object-propertyNames-pattern": {
     |                                        ^
> 78 |     "not pattern [A-Z]": false
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 79 |   },
     | ^^^^
  80 |   "type-object-required": {
  81 |     "two": false
  82 |   },

/type-object-propertyNames-pattern property name 'not pattern [A-Z]' is invalid
  75 |     "S_2": false
  76 |   },
> 77 |   "type-object-propertyNames-pattern": {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  78 |     "not pattern [A-Z]": false
  79 |   },
  80 |   "type-object-required": {

/type-object-required should have required property 'one'
  78 |     "not pattern [A-Z]": false
  79 |   },
> 80 |   "type-object-required": {
     |   ^^^^^^^^^^^^^^^^^^^^^^
  81 |     "two": false
  82 |   },
  83 |   "type-string": false,

/type-string should be string
  81 |     "two": false
  82 |   },
> 83 |   "type-string": false,
     |                  ^^^^^
  84 |   "type-string-const": "not const",
  85 |   "type-string-format-date": "not date",
  86 |   "type-string-format-date-time": "not date time",

/not-type-string should NOT be valid
   5 |   "enum-two": false,
   6 |   "errorMessage": false,
>  7 |   "not-type-string": "well it's a string",
     |                      ^^^^^^^^^^^^^^^^^^^^
   8 |   "type-array-additionalItems-false": [
   9 |     "is fine",
  10 |     true,

/type-string-const should be equal to constant: 'const'
  82 |   },
  83 |   "type-string": false,
> 84 |   "type-string-const": "not const",
     |                        ^^^^^^^^^^^
  85 |   "type-string-format-date": "not date",
  86 |   "type-string-format-date-time": "not date time",
  87 |   "type-string-format-time": "not time",

/type-string-format-date should match format "date"
  83 |   "type-string": false,
  84 |   "type-string-const": "not const",
> 85 |   "type-string-format-date": "not date",
     |                              ^^^^^^^^^^
  86 |   "type-string-format-date-time": "not date time",
  87 |   "type-string-format-time": "not time",
  88 |   "type-string-formatMinimum-date": "2020-01-01",

/type-string-format-date-time should match format "date-time"
  84 |   "type-string-const": "not const",
  85 |   "type-string-format-date": "not date",
> 86 |   "type-string-format-date-time": "not date time",
     |                                   ^^^^^^^^^^^^^^^
  87 |   "type-string-format-time": "not time",
  88 |   "type-string-formatMinimum-date": "2020-01-01",
  89 |   "type-string-maxLength": "max3",

/type-string-format-time should match format "time"
  85 |   "type-string-format-date": "not date",
  86 |   "type-string-format-date-time": "not date time",
> 87 |   "type-string-format-time": "not time",
     |                              ^^^^^^^^^^
  88 |   "type-string-formatMinimum-date": "2020-01-01",
  89 |   "type-string-maxLength": "max3",
  90 |   "type-string-minLength": "need6",

/type-string-formatMinimum-date should be >= 2021-01-01
  86 |   "type-string-format-date-time": "not date time",
  87 |   "type-string-format-time": "not time",
> 88 |   "type-string-formatMinimum-date": "2020-01-01",
     |                                     ^^^^^^^^^^^^
  89 |   "type-string-maxLength": "max3",
  90 |   "type-string-minLength": "need6",
  91 |   "type-string-null": false,

/type-string-maxLength should NOT have more than 3 characters
  87 |   "type-string-format-time": "not time",
  88 |   "type-string-formatMinimum-date": "2020-01-01",
> 89 |   "type-string-maxLength": "max3",
     |                            ^^^^^^
  90 |   "type-string-minLength": "need6",
  91 |   "type-string-null": false,
  92 |   "type-string-null-boolean": 1,

/type-string-minLength should NOT have fewer than 6 characters
  88 |   "type-string-formatMinimum-date": "2020-01-01",
  89 |   "type-string-maxLength": "max3",
> 90 |   "type-string-minLength": "need6",
     |                            ^^^^^^^
  91 |   "type-string-null": false,
  92 |   "type-string-null-boolean": 1,
  93 |   "type-string-pattern": "not phone number"

/type-string-null should be string or null
  89 |   "type-string-maxLength": "max3",
  90 |   "type-string-minLength": "need6",
> 91 |   "type-string-null": false,
     |                       ^^^^^
  92 |   "type-string-null-boolean": 1,
  93 |   "type-string-pattern": "not phone number"
  94 | }

/type-string-null-boolean should be string, null, or boolean
  90 |   "type-string-minLength": "need6",
  91 |   "type-string-null": false,
> 92 |   "type-string-null-boolean": 1,
     |                               ^
  93 |   "type-string-pattern": "not phone number"
  94 | }
  95 | 

/type-string-pattern should match pattern "^(\([0-9]{3}\))?[0-9]{3}-[0-9]{4}$"
  91 |   "type-string-null": false,
  92 |   "type-string-null-boolean": 1,
> 93 |   "type-string-pattern": "not phone number"
     |                          ^^^^^^^^^^^^^^^^^^
  94 | }
  95 | 